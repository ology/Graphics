#!/usr/bin/env perl
use Modern::Perl '2012';

use Parse::IRCLog;
use GD::Graph::Polar;
use Getopt::Long;
use List::MoreUtils qw( any );

die usage() unless @ARGV;

my $log;  # Log file to parse
my $show; # Nicks to show
my $hide; # Nicks to hide
my $label = 0; # Show nick labels;
GetOptions(
    'log=s'   => \$log,
    'show:s@' => \$show,
    'hide:s@' => \$hide,
    'label'   => \$label,
) or say usage();

my $irc = Parse::IRCLog->parse($log);

# People seen
my $nicks;

# Capture the number of occurances
for my $event ( $irc->events )
{
    my $nick = $event->{nick};
    next unless $nick;
    next if any { $_ eq $nick } @$hide;
    push @{ $nicks->{$nick}{occurance} }, $event->{timestamp};
}

# Capture directed conversation
for my $event ( $irc->events )
{
    my $nick = $event->{nick};
    next unless $nick;
    ( my $at_nick = $event->{text} ) =~ s/^(\w+):\s.+$/$1/;
    push @{ $nicks->{$nick}{at_nick} }, $at_nick
        if exists $nicks->{$nick} && exists $nicks->{$at_nick};
}

# Compute coordinates
my ( $theta, $r, $maxr );
for my $nick ( keys %$nicks )
{
    $r = @{ $nicks->{$nick}{occurance} };
    $maxr = $r if !$maxr || $r > $maxr;
    $theta = $nicks->{$nick}{occurance}[-1];
    $theta = time2degrees($theta);
    $nicks->{$nick}{coordinate} = [ $r, $theta ];
}

my $g = GD::Graph::Polar->new(
    size => 600,
    radius => $maxr,
    ticks => 20,
);

# Add datapoints, labels & edges
@$show = keys %$nicks unless $show && @$show;
for my $nick ( @$show )
{
    my $r = $maxr - $nicks->{$nick}{coordinate}[0] + 1;
    my $t = $nicks->{$nick}{coordinate}[1];
    add_datapoint( $r, $t, $nick, $nicks, $label );

    for my $at_nick ( @{ $nicks->{$nick}{at_nick} } )
    {
        my $atr = $maxr - $nicks->{$at_nick}{coordinate}[0] + 1;
        my $att = $nicks->{$at_nick}{coordinate}[1];
        add_datapoint( $atr, $att, $at_nick, $nicks, $label );
        # TODO Color line based on how many times the nick occurs
        $g->addLine( $r, $t, $atr, $att );
    }
}

print $g->draw;

sub usage { "perl $0 --log chat.log [--show Tarzan --show Jane] [--hide xBot --hide yFool]" }

sub add_datapoint
{
    my ( $r, $t, $nick, $nicks, $label ) = @_;
    return if $nicks->{$nick}{drawn};
    $g->addPoint( $r, $t );
    $g->addString( $r, $t, $nick ) if $label;
    $nicks->{$nick}{drawn}++;
}

sub time2degrees
{
    # HH:MM:SS
    my( $h, $m ) = split /:/, shift;

    # Convert minutes to degrees
    $m += $h * 60;
    my $degrees = $m * 360 / 1440; # By proportion: deg/360=min/1440 per day

    return $degrees;
}
__END__
:!perl % --log perl.log --hide GumbyPAN > vizirc.png

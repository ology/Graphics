#!/usr/bin/env perl
#
# Restaurant location data:
# https://docs.mongodb.org/getting-started/shell/import-data/
#
# mongod --auth
# mongo -u gene -p --authenticationDatabase "admin"
#
use strict;
use warnings;

use YAML;
use MongoDB;
use Algorithm::TravelingSalesman::BitonicTour;
use Math::Geometry::Planar;
use HTML::GoogleMaps::V3;

my $borough = shift || 'Manhattan';
my $grade   = shift || 'A';
my $score   = shift // 70;
my $config  = shift || 'creds.yaml';
my $db      = 'test.restaurants';

my $cfg = YAML::LoadFile($config);

my $client = MongoDB::MongoClient->new(
    host     => $cfg->{mongo}{dbhost},
    db_name  => $cfg->{mongo}{dbname},
    username => $cfg->{mongo}{dbuser},
    password => $cfg->{mongo}{dbpass},
);

# Select the relevant documents
my $criteria = {
    borough        => $borough,
    'grades.grade' => $grade,
    'grades.score' => { '$gt' => 0 + $score },
#    cuisine        => qr/american/i,
};
my $collection = $client->ns($db);
my $docs       = $collection->find($criteria);

my $tsp = Algorithm::TravelingSalesman::BitonicTour->new;

my %coord_name;  # Index of coordinates to restaurant names

# Add the points to the TSP object and coordinate index
while ( my $doc = $docs->next) {
    my @point = @{ $doc->{address}{coord} };
    $tsp->add_point(@point);
    $coord_name{ join ',', @point } = $doc->{name};
}

my ( undef, @coords ) = $tsp->solve;

# Find the path polygon centroid
my $polygon = Math::Geometry::Planar->new;
$polygon->points( [ @coords[ 1 .. $#coords ] ] );
my $centroid = $polygon->centroid;

my $map = HTML::GoogleMaps::V3->new(
    height => 800,
    width  => 800,
);
$map->zoom(12);
$map->center($centroid);

for my $coord (@coords) {
    my $point = join ',', $coord->[1], $coord->[0];  # Google maps wants lat/lon

    my $key = join ',', @$coord;
    $coord_name{$key} =~ s/'/`/g;  # Single quotes conflict with the marker
    $map->add_marker(
        point => $coord,
        html  => qq|<div id="content"><h3 id="firstHeading" class="firstHeading">$coord_name{$key}</h3><a href="https://www.google.com/maps/dir/$point">Directions to here</a></div>|,
    );
}

$map->add_polyline( points => \@coords );

my ($head, $map_div) = $map->onload_render;
print qq|<html><head><title>Test</title>$head</head>|;
print qq|<body onload="html_googlemaps_initialize()">$map_div</body></html>|;

#!/usr/bin/env perl
use strict;
use warnings;

use GD::Simple;
use List::Util qw( min max );
 
my $width  = 400;
my $height = 250;

my ( $min, $max, $headx, $mouthx, $eyesx, $eyess, $noses ) = @ARGV;
$min    //= 0;
$max    //= 100;
$headx  //= 50;
$mouthx //= 50;
$eyesx  //= 50;
$eyess  //= 50;
$noses  //= 50;

# Canvas
my $img = GD::Simple->new( $width, $height );
$img->penSize( 1, 1 );
$img->bgcolor(undef);
$img->rectangle( 0, 0, $width - 1, $height - 1 );

# Head = 30 to 250
$headx = scale_to( $headx, $min, $max, 30, 250 );
$img->fgcolor('black');
$img->moveTo( $width / 2, $height / 2 );
$img->ellipse( $headx, 200 );

# Mouth = -60 to 40
$mouthx = scale_to( $mouthx, $min, $max, -60, 40 );
$img->fgcolor('darkred');
my $x1 = ( $width - $width / 3 ) + 1 + $mouthx;
my $x2 = ( $width / 3 ) - $mouthx;
my $y1 = $height - $height / 3;
$img->moveTo( $x1, $y1 );
$img->lineTo( $x2, $y1 );

# Eyes = x: 5 to 55, s: 5 to 50
$eyesx = scale_to( $eyesx, $min, $max, 55, 5 );
$eyess = scale_to( $eyess, $min, $max, 5, 50 );
$img->fgcolor('darkblue');
$x1 = ( $width / 3 ) + 1 + $eyesx;
$y1 = $height / 3;
$img->moveTo( $x1, $y1 );
$img->ellipse( $eyess, $eyess );
$x1 = ( $width - $width / 3 ) - $eyesx;
$y1 = $height / 3;
$img->moveTo( $x1, $y1 );
$img->ellipse( $eyess, $eyess );

# Nose = 0 to 36
my $poly = GD::Polygon->new;
$noses = scale_to( $noses, $min, $max, 36, 0 );
$img->fgcolor('black');
my $defaultx = 30;
$x1 = $width / 2;
$y1 = $height / 3;
$poly->addPt( $x1, $y1 );   # Top
$x1 = ( $width / 3 ) + $defaultx + 1 + $noses;
$y1 = $height / 2;
$poly->addPt( $x1, $y1 );   # Left
$x1 = ( $width - $width / 3 ) - $defaultx - $noses;
$poly->addPt( $x1, $y1 );   # Right
$img->polygon($poly);

print $img->png;

# https://stackoverflow.com/questions/5294955/how-to-scale-down-a-range-of-numbers-with-a-known-min-and-max-value
sub scale_to {
    my ( $x, $min, $max, $top, $bottom ) = @_;
    my $scale_to = ( ( $bottom - $top ) * ( $x - $min ) / ( $max - $min ) ) + $top;
    return $scale_to;
}
